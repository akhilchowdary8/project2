<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.lumit">
    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the "MyLocation" functionality.
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="18" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/lumit1"
        android:supportsRtl="true"
        android:theme="@style/Theme.LUMIT">
        <activity
            android:name=".MainActivity17"
            android:exported="false" />
        <activity
            android:name=".Upi"
            android:exported="false" />
        <activity
            android:name=".MainActivity16"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity15"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity14"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".MapsActivity"
            android:exported="false"
            android:label="@string/title_activity_maps" />
        <activity
            android:name=".MainActivity13"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity12"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity11"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity10"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity333
            android:name=".MainActivity9"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity8"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity7"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity6"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity5"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity4"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity3"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity2"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="false"
            android:label="@string/app_name" />
        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|screenSize|screenLayout|keyboardHidden"
            android:exported="true"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>
4.3.2 Mainactivity_1.java:

package com.example.lumit;

import static java.lang.Thread.sleep;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Thread timer = new Thread(){
            @Override
            public void run() {
                try {
                    synchronized (this){
                        wait(3000);
                    }
                } catch (InterruptedException e){
                    e.printStackTrace();
                } finally {
                    Intent intent = new Intent(MainActivity.this, MainActivity2.class);
                    startActivity(intent);
                    finish();
                }
            }
        };
        timer.start();
    }
}

4.3.3 Mainactivity_2.java:

package com.example.lumit;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

public class MainActivity2 extends AppCompatActivity {
    private long pressedTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);
        findViewById(R.id.btn2).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent2=new Intent(MainActivity2.this,MainActivity15.class);
                startActivity(intent2);
            }
        });
        findViewById(R.id.btn3).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent3=new Intent(MainActivity2.this,MainActivity4.class);
                startActivity(intent3);
            }
        });
    }
    @Override
    public void onBackPressed() {

        if (pressedTime + 2000 > System.currentTimeMillis()) {
            super.onBackPressed();
            finish();
        } else {
            Toast.makeText(getBaseContext(), "Press back again to exit", Toast.LENGTH_SHORT).show();
        }
        pressedTime = System.currentTimeMillis();
    }
}

4.3.4 mainactivity_3.java:
package com.example.lumit;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity3 extends AppCompatActivity {
    private EditText detailsNameEdt, detailsUnameEdt,detailsPhoneEdt, detailsAgeEdt, detailsPinEdt,detailsAadharEdt,detailsPwdEdt,detailsMailEdt,detailsCityEdt;
    private Button addCourseBtn;
    private DBHandler dbHandler;
    private long pressedTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main3);
        detailsNameEdt = findViewById(R.id.et1);
        detailsUnameEdt= findViewById(R.id.et7);
        detailsAgeEdt= findViewById(R.id.et2);
        detailsMailEdt= findViewById(R.id.et3);
        detailsCityEdt= findViewById(R.id.et4);
        detailsPhoneEdt=findViewById(R.id.et10);
        detailsPinEdt= findViewById(R.id.et5);
        detailsAadharEdt= findViewById(R.id.et6);
        detailsPwdEdt= findViewById(R.id.et8);
        addCourseBtn = findViewById(R.id.btn4);
        dbHandler=new DBHandler(MainActivity3.this);
        Intent intent = getIntent();
        String str = intent.getStringExtra("num");
        detailsPhoneEdt.setText(str);
        addCourseBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // below line is to get data from all edit text fields.
                String detailsName = detailsNameEdt.getText().toString();
                String detailsAge = detailsAgeEdt.getText().toString();
                String detailsMail = detailsMailEdt.getText().toString();
                String detailsPhone = detailsPhoneEdt.getText().toString();
                String detailsCity = detailsCityEdt.getText().toString();
                String detailsPin = detailsPinEdt.getText().toString();
                String detailsAadhar = detailsAadharEdt.getText().toString();
                String detailsUname = detailsUnameEdt.getText().toString();
                String detailsPwd = detailsPwdEdt.getText().toString();

                // validating if the text fields are empty or not.
                if (detailsName.isEmpty() && detailsPhone.isEmpty() && detailsUname.isEmpty() && detailsAge.isEmpty() && detailsMail.isEmpty() && detailsCity.isEmpty() && detailsPin.isEmpty() && detailsAadhar.isEmpty() && detailsPwd.isEmpty()) {
                    Toast.makeText(MainActivity3.this, "Please enter the details..", Toast.LENGTH_SHORT).show();
                    return;
                }
                boolean b = dbHandler.checkDataExistOrNot(detailsUname);
                if (b == true) {
                    Toast.makeText(MainActivity3.this, "username alredy exists", Toast.LENGTH_SHORT).show();
                    return;
                } else {
                    dbHandler.addNewCourse(detailsUname, detailsName, detailsAge, detailsPhone, detailsPin, detailsAadhar, detailsPwd, detailsMail, detailsCity);
                    // after adding the data we are displaying a toast message.
                    Toast.makeText(MainActivity3.this, "Details added", Toast.LENGTH_SHORT).show();
                    detailsUnameEdt.setText("");
                    detailsNameEdt.setText("");
                    detailsAgeEdt.setText("");
                    detailsPhoneEdt.setText("");
                    detailsPinEdt.setText("");
                    detailsAadharEdt.setText("");
                    detailsPwdEdt.setText("");
                    detailsMailEdt.setText("");
                    detailsCityEdt.setText("");
                    Intent intent25 = new Intent(MainActivity3.this, MainActivity4.class);
                    startActivity(intent25);
                }
            }
        });
    }
    @Override
    public void onBackPressed() {

        if (pressedTime + 2000 > System.currentTimeMillis()) {
            super.onBackPressed();
            finish();
        } else {
            Toast.makeText(getBaseContext(), "Press back again to exit", Toast.LENGTH_SHORT).show();
        }
        pressedTime = System.currentTimeMillis();
    }
}



4.3.5    Database.java:

package com.example.lumit;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

    public class DBHandler extends SQLiteOpenHelper {
        private static final String DB_NAME = "details";

        // below int is our database version
        private static final int DB_VERSION = 1;

        // below variable is for our table name.
        private static final String TABLE_NAME = "register";

        // below variable is for our id column.
        private static final String UNAME_COL = "user";

        // below variable is for our course name column
        private static final String NAME_COL = "name";

        private static final String AGE_COL = "age";

        private static final String PHONE_COL = "phone";

        private static final String MAIL_ID = "mail";

        private static final String PIN_CODE = "pin";

        private static final String AADHAR_COL = "aadhar";

        private static final String PASSWORD_COL = "pwd";

        private static final String CITY_COL = "city";

        public DBHandler(Context context) {
            super(context, DB_NAME, null, DB_VERSION);
        }
        @Override
        public void onCreate(SQLiteDatabase db) {
            String query = "CREATE TABLE " + TABLE_NAME + " ("
                    + UNAME_COL + " TEXT UNIQUE,"
                    + NAME_COL + " TEXT,"
                    + AGE_COL + " INTEGER,"
                    + PHONE_COL + " INTEGER,"
                    + PIN_CODE + " INTEGER,"
                    + AADHAR_COL + " INTEGER,"
                    + PASSWORD_COL + " INTEGER,"
                    + MAIL_ID + " TEXT,"
                    + CITY_COL + " TEXT)";
            db.execSQL(query);
        }
        public void addNewCourse(String detailsUname, String detailsName, String detailsAge,String detailsPhone, String detailsPin,String detailsAadhar,String detailsPwd,String detailsMail,String detailsCity) {

            SQLiteDatabase db = this.getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(UNAME_COL, detailsUname);
            values.put(NAME_COL, detailsName);
            values.put(AGE_COL,detailsAge);
            values.put(PHONE_COL, detailsPhone);
            values.put(PIN_CODE, detailsPin);
            values.put(AADHAR_COL, detailsAadhar);
            values.put(PASSWORD_COL, detailsPwd);
            values.put(MAIL_ID, detailsMail);
            values.put(CITY_COL, detailsCity);
            db.insert(TABLE_NAME, null, values);
            db.close();
        }

        public boolean checkDataExistOrNot(String value){
            SQLiteDatabase db = this.getWritableDatabase();
            Cursor cursor = db.rawQuery("Select * from register where user = ?", new String[]{value});
            if (cursor.getCount() <= 0) {
                cursor.close();
                return false;  // return false if value not exists in database
            }
            cursor.close();
            return true;  // return true if value exists in database
        }
        public Boolean checkuser(String username, String password){
            SQLiteDatabase db = this.getWritableDatabase();
            Cursor cursor = db.rawQuery("Select * from register where user = ? and pwd = ?", new String[] {username,password});
            if(cursor.getCount()>0)
                return true;
            else
                return false;
        }
        public Boolean deleteuser(String username){
            SQLiteDatabase db = this.getWritableDatabase();
            return db.delete(TABLE_NAME, "user=?", new String[]{username}) > 0;
        }
        public Cursor getDetails(String uname){
            SQLiteDatabase db = this.getWritableDatabase();
            Cursor cursor = db.rawQuery("Select name,age,phone,pin,aadhar,mail,city from register where user = ?", new String[] {uname});
            if (cursor != null) {
                cursor.moveToFirst();
            }
            return cursor;
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
            onCreate(db);
        }
    }
